# UE4 chunked uexp/uasset extractor
# v1 by bnnm
# DON'T USE, try umodel instead (left for reference)

math IGNORE_FOOTER = 1 #for UE5

######################

# check files
#open FDDE UEXP/UASSET 0
open FDDE UBULK 1


get FILE_SIZE asize 0


# check UE4 footer (in UEXP/UASSET)
if IGNORE_FOOTER == 0
    xmath LAST_OFFSET " FILE_SIZE - 0x04 "
    goto LAST_OFFSET 
    endian big
    get EXPECTED_ID long 0
    if EXPECTED_ID != 0xC1832A9E
        print "expected UE4 id not found"
        cleanexit
    endif
endif
endian little 
 
# extract known assets
goto 0 0
string SEARCH_STRING = "UE4OPUS"
string SEARCH_EXT = ".ue4opus"  #.opus/.lopus is also ok
callfunction EXTRACT_STRING 1

goto 0 0
string SEARCH_STRING = "OggS" #dunno if chunked Ogg exist
string SEARCH_EXT = ".ogg"
callfunction EXTRACT_STRING 1

goto 0 0
string SEARCH_STRING = "RIFF"
string SEARCH_EXT = ".adpcm"
callfunction EXTRACT_STRING 1

goto 0 0
string SEARCH_STRING = "ABEU"
string SEARCH_EXT = ".ueba"
callfunction EXTRACT_STRING 1

cleanexit

###

startfunction EXTRACT_STRING
    findloc UEXP_OFFSET string SEARCH_STRING 0 ""
    if UEXP_OFFSET != ""
        xmath CHUNK_OFFSET " UEXP_OFFSET - 0x10 "
        goto CHUNK_OFFSET 0
        get CHUNK_SIZE long 0
        if CHUNK_SIZE > FILE_SIZE
            print "bad chunk size %CHUNK_SIZE|h% vs %FILE_SIZE|h%"
            cleanexit
        endif

        xmath TABLE_OFFSET " UEXP_OFFSET + CHUNK_SIZE "
        set UBULK_OFFSET long 0

        set DONE_FIRST long 0

        log MEMORY_FILE 0 0
        append #on
        do
            goto TABLE_OFFSET 0
            get CHUNK_SIZE long 0
            get CHUNK_DATA long 0

            if DONE_FIRST == 0
                log MEMORY_FILE UEXP_OFFSET CHUNK_DATA 0
                set DONE_FIRST long 1
            else 
                log MEMORY_FILE UBULK_OFFSET CHUNK_DATA 1
                math UBULK_OFFSET += CHUNK_SIZE
            
            endif
        
            math TABLE_OFFSET += 0x20
        
        while TABLE_OFFSET < FILE_SIZE
        append #off
        
        get NAME basename 0
        string NAME += SEARCH_EXT
        get SIZE asize MEMORY_FILE

        log NAME OFFSET SIZE MEMORY_FILE
    endif

endfunction
